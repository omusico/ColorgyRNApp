#!/usr/bin/env node
var Mustache = require('mustache');
var fs = require('fs');

// Build variables

var variables = {};

variables.config = require('../config');
variables.app = require('../package.json');
variables.THEME = require('../app/constants/THEME');

variables.app.versionName = variables.app.version;
variables.app.versionCode = variables.app.version.split('.').map((v) => parseInt(v)).reduce((vc, v, i) => (vc + v * Math.pow(10000, 2-i)), 0);

// Do the render

var templateFileName = process.argv[2];

if (!templateFileName) {
  console.error('Error: Missing template path as the first arg.');
  return -1;
}

var outputFileName = templateFileName.replace(/[\._\-\/]templates?/, '');

if (outputFileName == templateFileName) {
  console.error('Error: The template file name does not ends with ".template".');
  return -1;
}

var templateFile = fs.readFileSync(templateFileName, "utf8");

var outputFile = Mustache.render(templateFile, variables);

if (outputFileName.match(/.xml$/)) {
  outputFile = "<!-- This file is rendered from " + templateFileName + " -->\n" + "<!-- DO NOT EDIT THIS FILE DIRECTLY. -->\n<!-- You should edit " + templateFileName + " and then run bin/render-templates from the project directory. -->\n\n" + outputFile;
} else if (outputFileName.match(/.gradle$/)) {
  outputFile = "/**\n * This file is rendered from " + templateFileName + "\n" + " *\n * DO NOT EDIT THIS FILE DIRECTLY.\n *\n * You should edit " + templateFileName + "\n * and then run bin/render-templates from the project directory.\n */\n\n" + outputFile;
}

fs.writeFileSync(outputFileName, outputFile);

console.log("Rendered: ", templateFileName);
